"""Initial migration

Revision ID: 9cd31f2320e9
Revises: 
Create Date: 2025-07-09 19:33:51.573889

"""
from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision = '9cd31f2320e9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_base',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('embedding', Vector(384), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='promptab'
    )
    op.create_index(op.f('ix_promptab_knowledge_base_category'), 'knowledge_base', ['category'], unique=False, schema='promptab')
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='promptab'
    )
    op.create_index(op.f('ix_promptab_users_email'), 'users', ['email'], unique=True, schema='promptab')
    op.create_index(op.f('ix_promptab_users_username'), 'users', ['username'], unique=True, schema='promptab')
    op.create_table('prompt_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('original_prompt', sa.Text(), nullable=False),
    sa.Column('optimized_prompt', sa.Text(), nullable=False),
    sa.Column('llm_provider', sa.String(length=50), nullable=True),
    sa.Column('llm_model', sa.String(length=100), nullable=True),
    sa.Column('optimization_techniques', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('rag_sources', sa.ARRAY(sa.UUID()), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('user_rating >= 1 AND user_rating <= 5', name='check_user_rating'),
    sa.ForeignKeyConstraint(['user_id'], ['promptab.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='promptab'
    )
    op.create_index(op.f('ix_promptab_prompt_history_session_id'), 'prompt_history', ['session_id'], unique=False, schema='promptab')
    op.create_table('user_prompts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('original_prompt', sa.Text(), nullable=False),
    sa.Column('optimized_prompt', sa.Text(), nullable=False),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['promptab.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='promptab'
    )
    op.create_index(op.f('ix_promptab_user_prompts_category'), 'user_prompts', ['category'], unique=False, schema='promptab')
    op.create_table('variable_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['promptab.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='unique_user_category_name'),
    schema='promptab'
    )
    op.create_table('feedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('prompt_history_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.String(length=20), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("rating IN ('like', 'dislike')", name='check_feedback_rating'),
    sa.ForeignKeyConstraint(['prompt_history_id'], ['promptab.prompt_history.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['promptab.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='promptab'
    )
    op.create_table('variables',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('examples', sa.Text(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['promptab.variable_categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['promptab.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='unique_user_variable_name'),
    schema='promptab'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('variables', schema='promptab')
    op.drop_table('feedback', schema='promptab')
    op.drop_table('variable_categories', schema='promptab')
    op.drop_index(op.f('ix_promptab_user_prompts_category'), table_name='user_prompts', schema='promptab')
    op.drop_table('user_prompts', schema='promptab')
    op.drop_index(op.f('ix_promptab_prompt_history_session_id'), table_name='prompt_history', schema='promptab')
    op.drop_table('prompt_history', schema='promptab')
    op.drop_index(op.f('ix_promptab_users_username'), table_name='users', schema='promptab')
    op.drop_index(op.f('ix_promptab_users_email'), table_name='users', schema='promptab')
    op.drop_table('users', schema='promptab')
    op.drop_index(op.f('ix_promptab_knowledge_base_category'), table_name='knowledge_base', schema='promptab')
    op.drop_table('knowledge_base', schema='promptab')
    # ### end Alembic commands ### 